---
- name: Kubeadm | Master | Ensure kubeadm required directories exist
  file: path={{ item }} state=directory
  with_items:
    - "{{ kubeadm_exec_dir }}"
    - "{{ kubeadm_sync_dirs }}"

- name: Kubeadm | Master | Copy kubeadm init config file
  template:
    src: kubeadm-config.yaml.j2
    dest: "{{ kubeadm_exec_dir }}/kubeadm-config.yaml"

- name: Kubeadm | Master | Check if Kubernetes control plane is UP
  shell: |
    CONTAINERS=(kube-proxy etcd kube-controller-manager kube-apiserver kube-scheduler)
    for container in "${CONTAINERS[@]}"
    do
      STATE=$(crictl --runtime-endpoint unix://{{ cri_socket }} ps -o json | jq  --arg container "$container" -r --unbuffered   '.containers[]|select(.metadata.name == $container)|.state')
      if [ "$STATE" != "CONTAINER_RUNNING" ]; then
        exit 2
      fi
    done
  ignore_errors: yes
  register: kubernetes_control_plane

- include_tasks: master.yml
  when: inventory_hostname == groups['master'][0] and kubernetes_control_plane.rc==2

- include_tasks: additional-masters.yml
  when: inventory_hostname != groups['master'][0] and kubernetes_control_plane.rc==2

- include_tasks: upgrade-master.yml
  when: inventory_hostname != groups['master'][0] and kubernetes_control_plane.rc==0

- include_tasks: upgrade-additional-masters.yml
  when: inventory_hostname != groups['master'][0] and kubernetes_control_plane.rc==0
